"use strict";(self.webpackChunkmovies_search=self.webpackChunkmovies_search||[]).push([[452],{452:(e,t,s)=>{s.r(t),s.d(t,{default:()=>c});var n=s(216),l=s(475),a=s(43),i=s(613),o=s(623),r=s(579);const c=()=>{const e=(0,n.zy)(),[t,s]=(0,l.ok)(),[c,u]=(0,a.useState)([]),[h,m]=(0,a.useState)(""),[d,f]=(0,a.useState)(!1),[p,j]=(0,a.useState)(null);(0,a.useEffect)((()=>{console.log("when component mounts, if to ignore mount, on mount title is null");const e=t.get("query");e&&(m(e),v(e))}),[t]);const v=async e=>{f(!0),j(null);try{const t=await(0,o.kj)(e);u(t)}catch(t){j("Failed to fetch films")}finally{f(!1)}};return(0,r.jsxs)("div",{className:"movies__wrapper",children:[(0,r.jsx)("h1",{children:"Movies"}),(0,r.jsxs)("form",{onSubmit:e=>{e.preventDefault();s(""!==h?{query:h}:{})},children:[(0,r.jsx)("input",{placeholder:"Enter film's name",name:"title",value:h,onChange:e=>{m(e.currentTarget.value)}}),(0,r.jsx)("button",{type:"submit",children:"Search"})]}),d&&(0,r.jsx)(i.a,{}),p&&(0,r.jsx)("p",{children:p}),(0,r.jsx)("ul",{className:"movies-list",children:c&&!d&&c.map((t=>{let{title:s,id:n}=t;const a=`/movies/${n}`;return(0,r.jsx)("li",{children:(0,r.jsx)(l.N_,{to:a,state:{from:e},children:s})},n)}))})]})}}}]);
//# sourceMappingURL=452.a55522f7.chunk.js.map